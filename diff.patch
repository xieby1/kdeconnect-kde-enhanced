diff -rupN kdeconnect-kde-22.04.1-orig/kdeconnect-kde-22.04.1/plugins/remotekeyboard/CMakeLists.txt kdeconnect-kde-22.04.1/plugins/remotekeyboard/CMakeLists.txt
--- kdeconnect-kde-22.04.1-orig/kdeconnect-kde-22.04.1/plugins/remotekeyboard/CMakeLists.txt	2022-05-10 10:50:03.000000000 +0800
+++ kdeconnect-kde-22.04.1/plugins/remotekeyboard/CMakeLists.txt	2022-06-18 22:48:31.077215314 +0800
@@ -8,7 +8,10 @@ ecm_qt_declare_logging_category(
 kdeconnect_add_plugin(kdeconnect_remotekeyboard
     SOURCES remotekeyboardplugin.cpp ${debug_file_SRCS})
 
+# find_package(Qt5 ${QT_MIN_VERSION} REQUIRED COMPONENTS X11Extras)
+
 target_link_libraries(kdeconnect_remotekeyboard
     kdeconnectcore
+    Qt5::Gui
     Qt5::DBus
 )
diff -rupN kdeconnect-kde-22.04.1-orig/kdeconnect-kde-22.04.1/plugins/remotekeyboard/remotekeyboardplugin.cpp kdeconnect-kde-22.04.1/plugins/remotekeyboard/remotekeyboardplugin.cpp
--- kdeconnect-kde-22.04.1-orig/kdeconnect-kde-22.04.1/plugins/remotekeyboard/remotekeyboardplugin.cpp	2022-05-10 10:50:03.000000000 +0800
+++ kdeconnect-kde-22.04.1/plugins/remotekeyboard/remotekeyboardplugin.cpp	2022-06-19 00:28:01.707730993 +0800
@@ -6,6 +6,8 @@
 
 #include "remotekeyboardplugin.h"
 #include <KPluginFactory>
+#include <QGuiApplication>
+#include <QClipboard>
 #include <QDebug>
 #include <QString>
 #include <QVariantMap>
@@ -91,15 +93,34 @@ void RemoteKeyboardPlugin::sendKeyPress(
                                         bool shift, bool ctrl,
                                         bool alt, bool sendAck) const
 {
-    NetworkPacket np(PACKET_TYPE_MOUSEPAD_REQUEST, {
-                          {QStringLiteral("key"), key},
-                          {QStringLiteral("specialKey"), specialKey},
-                          {QStringLiteral("shift"), shift},
-                          {QStringLiteral("ctrl"), ctrl},
-                          {QStringLiteral("alt"), alt},
-                          {QStringLiteral("sendAck"), sendAck}
-                      });
-    sendPacket(np);
+    if (key==QStringLiteral("v") && ctrl)
+    {
+        QString clipboardText =  QGuiApplication::clipboard()->text();
+        qCDebug(KDECONNECT_PLUGIN_REMOTEKEYBOARD) << "clipboard: " << clipboardText.toStdString().data();
+        NetworkPacket np(PACKET_TYPE_MOUSEPAD_REQUEST, {
+                              {QStringLiteral("key"), clipboardText},
+                              {QStringLiteral("specialKey"), specialKey},
+                              {QStringLiteral("shift"), shift},
+                              {QStringLiteral("ctrl"), false},
+                              {QStringLiteral("alt"), alt},
+                              {QStringLiteral("sendAck"), sendAck}
+                          });
+        sendPacket(np);
+    } else {
+        if (ctrl)
+            qCDebug(KDECONNECT_PLUGIN_REMOTEKEYBOARD) << "key " << key.toStdString().data() << "ctrl 1";
+        else
+            qCDebug(KDECONNECT_PLUGIN_REMOTEKEYBOARD) << "key " << key.toStdString().data() << "ctrl 0";
+        NetworkPacket np(PACKET_TYPE_MOUSEPAD_REQUEST, {
+                              {QStringLiteral("key"), key},
+                              {QStringLiteral("specialKey"), specialKey},
+                              {QStringLiteral("shift"), shift},
+                              {QStringLiteral("ctrl"), ctrl},
+                              {QStringLiteral("alt"), alt},
+                              {QStringLiteral("sendAck"), sendAck}
+                          });
+        sendPacket(np);
+    }
 }
 
 void RemoteKeyboardPlugin::sendQKeyEvent(const QVariantMap& keyEvent, bool sendAck) const
